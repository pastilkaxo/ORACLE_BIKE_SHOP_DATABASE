

-- PROCEDURES THAT EXPORT\IMPORT DATA FROM TABLE TO JSON

/*
SELECT '[' || LISTAGG(JSON_OBJECT(
'ID' IS BIKE_ID,
'SELLER' IS SELLER_ID,
'NAME' IS BIKE_NAME,
'PRICE' IS PRICE,
'CATEGORY' IS CATEGORY_ID
),',') || ']'
FROM  BIKES
;
*/

CREATE OR REPLACE DIRECTORY BIKES_JSON AS 'C:\COURSE_WORK_DATA';
CREATE OR REPLACE DIRECTORY USERS_JSON AS 'C:\COURSE_WORK_DATA';
CREATE OR REPLACE DIRECTORY ORDERS_JSON AS 'C:\COURSE_WORK_DATA';
CREATE OR REPLACE DIRECTORY DESCRIPTIONS_JSON AS 'C:\COURSE_WORK_DATA';
CREATE OR REPLACE DIRECTORY RATINGS_JSON AS 'C:\COURSE_WORK_DATA';
CREATE OR REPLACE DIRECTORY CART_JSON AS 'C:\COURSE_WORK_DATA';
CREATE OR REPLACE DIRECTORY ROLES_JSON AS 'C:\COURSE_WORK_DATA';
CREATE OR REPLACE DIRECTORY CATEGORIES_JSON AS 'C:\COURSE_WORK_DATA';

-- BIKES
CREATE OR REPLACE PROCEDURE EXPORT_BIKES_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS BIKE_ID,
    'SELLER' IS SELLER_ID,
    'NAME' IS BIKE_NAME,
    'PRICE' IS PRICE,
    'CATEGORY' IS CATEGORY_ID
    ),',') || ']' AS JSON_DATA
    FROM BIKES;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('BIKES_JSON','BIKES.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_BIKES_TO_JSON();
END;



-- USERS


CREATE OR REPLACE PROCEDURE EXPORT_USERS_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS USER_ID,
    'NAME' IS USER_NAME,
    'SURNAME' IS USER_SURNAME,
    'FATHERNAME' IS USER_FATHERNAME,
    'EMAIL' IS USER_EMAIL,
    'PASSWORD' IS PASSWORD,
    'BIRTH' IS DATE_OF_BIRTH,
    'ADRESS' IS ADRESS,
    'ROLE' IS ROLE_ID
    ),',') || ']' AS JSON_DATA
    FROM USERS;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('USERS_JSON','USERS.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_USERS_TO_JSON();
END;

-- ORDERS

CREATE OR REPLACE PROCEDURE EXPORT_ORDERS_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS ORDER_ID,
    'BUYER' IS BUYER_ID,
    'BIKE' IS BIKE_ID,
    'QNT' IS QUANTITY,
    'DATE' IS ORDER_DATE,
    'STATUS' IS STATUS
    ),',') || ']' AS JSON_DATA
    FROM ORDERS;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('ORDERS_JSON','ORDERS.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_ORDERS_TO_JSON();
END;

-- DESCRIPTION

SELECT * FROM DESCRIPTIONS;

CREATE OR REPLACE PROCEDURE EXPORT_DESC_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS DESC_ID,
    'BIKE' IS BIKE_ID,
    'TYPE' IS BIKE_TYPE,
    'MATERIAL' IS MATERIAL,
    'WEIGHT' IS WEIGHT,
    'HEIGHT' IS HEIGHT
    ),',') || ']' AS JSON_DATA
    FROM DESCRIPTIONS;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('DESCRIPTIONS_JSON','DESCRIPTIONS.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_DESC_TO_JSON();
END;


-- CART 


CREATE OR REPLACE PROCEDURE EXPORT_CART_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS CART_ID,
    'USER' IS USER_ID,
    'BIKE' IS BIKE_ID,
    'QNT' IS QUANTITY
    ),',') || ']' AS JSON_DATA
    FROM CART;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('CART_JSON','CART.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_CART_TO_JSON();
END;


-- RATINGS



CREATE OR REPLACE PROCEDURE EXPORT_RATE_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS RATING_ID,
    'BIKE' IS BIKE_ID,
    'USER' IS USER_ID,
    'VALUE' IS RATING_VALUE,
    'MESSAGE' IS RATING_MESSAGE,
    'TIMESTAMP' IS TIME_STAMP
    ),',') || ']' AS JSON_DATA
    FROM RATINGS;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('RATINGS_JSON','RATINGS.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_RATE_TO_JSON();
END;


-- ROLES

CREATE OR REPLACE PROCEDURE EXPORT_ROLE_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS ROLE_ID,
    'NAME' IS ROLENAME
    ),',') || ']' AS JSON_DATA
    FROM ROLES;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('ROLES_JSON','ROLES.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_ROLE_TO_JSON();
END;


-- CATEGORIES



CREATE OR REPLACE PROCEDURE EXPORT_CATEGORY_TO_JSON
IS
    CURSOR BIKES_ARR IS SELECT '[' || LISTAGG(JSON_OBJECT(
    'ID' IS CATEGORY_ID,
    'NAME' IS CAT_NAME
    ),',') || ']' AS JSON_DATA
    FROM CATEGORIES;
    JS_FILE UTL_FILE.FILE_TYPE;
BEGIN
    JS_FILE := UTL_FILE.FOPEN('CATEGORIES_JSON','CATEGORIES.JSON','W');
    FOR BIKES_REC IN BIKES_ARR LOOP
        UTL_FILE.PUT_LINE(JS_FILE, BIKES_REC.JSON_DATA);
    END LOOP;
    UTL_FILE.FFLUSH(JS_FILE);
    UTL_FILE.FCLOSE(JS_FILE);
EXCEPTION
    WHEN OTHERS THEN
        UTL_FILE.FCLOSE(JS_FILE);
        RAISE;
END;

BEGIN
    EXPORT_CATEGORY_TO_JSON();
END;