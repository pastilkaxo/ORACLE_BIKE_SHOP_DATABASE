-- -----------------    VIES: ----------------------------

CREATE VIEW USER_V AS
SELECT 
    u.USER_ID,
    u.USER_NAME,
    u.PASSWORD,
    u.USER_SURNAME,
    u.USER_FATHERNAME,
    u.USER_EMAIL,
    u.DATE_OF_BIRTH,
    COUNT(o.ORDER_ID) AS ORDERS_COUNT,
    SUM(c.QUANTITY) AS CART_COUNT
FROM USERS u
LEFT JOIN ORDERS o ON o.BUYER_ID = u.USER_ID
LEFT JOIN CART c ON c.USER_ID = u.USER_ID
GROUP BY     
    u.USER_ID,
    u.USER_NAME,
    u.PASSWORD,
    u.USER_SURNAME,
    u.USER_FATHERNAME,
    u.USER_EMAIL,
    u.DATE_OF_BIRTH
ORDER BY u.USER_ID;


CREATE VIEW BIKE_V AS
SELECT
    B.BIKE_ID,
    B.BIKE_NAME,
    B.PRICE,
    C.CAT_NAME,
    D.BIKE_DESC ,
    D.BIKE_TYPE ,
    D.MATERIAL ,
    D.WEIGHT ,
    D.HEIGHT ,
    R.RATING_VALUE ,
    R.RATING_MESSAGE ,
    R.TIME_STAMP
FROM BIKES B 
INNER JOIN RATINGS R ON R.BIKE_ID = B.BIKE_ID
INNER JOIN CATEGORIES C ON C.CATEGORY_ID = B.CATEGORY_ID
INNER JOIN DESCRIPTIONS D ON D.BIKE_ID = B.BIKE_ID
ORDER BY B.BIKE_ID
;


CREATE VIEW ORDER_V AS
SELECT
    O.ORDER_ID,
    O.BUYER_ID,
    B.BIKE_ID,
    B.BIKE_NAME,
    B.PRICE,
    B.SELLER_ID,
    U.USER_NAME,
    U.USER_SURNAME,
    U.USER_FATHERNAME,
    U.USER_EMAIL,
    U.ADRESS,
    O.QUANTITY,
    O.ORDER_DATE,
    O.STATUS
FROM ORDERS O
INNER JOIN USERS U ON U.USER_ID = O.BUYER_ID
INNER JOIN BIKES B ON B.BIKE_ID = O.BIKE_ID
;


CREATE VIEW CART_V AS
SELECT
    C.CART_ID,
    C.USER_ID,
    C.BIKE_ID,
    B.BIKE_NAME,
    B.PRICE,
    CA.CAT_NAME,
    C.QUANTITY,
    U.USER_NAME,
    U.USER_SURNAME,
    U.USER_FATHERNAME
FROM CART C
INNER JOIN USERS U ON U.USER_ID = C.USER_ID
INNER JOIN BIKES B ON B.BIKE_ID = C.BIKE_ID
INNER JOIN CATEGORIES CA ON CA.CATEGORY_ID = B.CATEGORY_ID
;

-- DROP VIEW USER_V;
-- DROP VIEW BIKE_V;
-- DROP VIEW ORDER_V;
-- DROP VIEW CART_V;